---
import logo from "@assets/logo-maria-maggiore.svg";

const sections = [
  "Inicio",
  "Sobre",
  "Diferencias",
  "Galeria",
  "Plantas",
  "Localização",
];
---

<nav
  id="navbar"
  class="bg-maggiore-green text-white sticky top-0 py-5 w-full z-50 flex justify-between items-center overflow-hidden">
  <div
    class="container mx-auto px-8 grid lg:grid-cols-2 place-items-center lg:place-items-start place-content-between gap-y-6 gap-x-1 md:gap-x-0">
    <a href="/" class="block self-center">
      <img
        src={logo.src}
        alt="Logo Maria Maggiore"
        class="w-[270px] object-contain"
      />
    </a>
    <ul class="flex space-x-3 md:space-x-6 place-self-end text-xs md:text-sm">
      {
        sections.map((section) => (
          <li>
            <a
              href={`#${section.toLowerCase()}`}
              class="relative text-white hover:text-maggiore-brown transition duration-300"
              aria-current="page">
              {section}
              <span class="absolute left-0 -bottom-1 w-full h-0.5 bg-maggiore-brown scale-x-0 origin-center transition-transform duration-300" />
            </a>
          </li>
        ))
      }
    </ul>
  </div>
</nav>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const sections = document.querySelectorAll("section");
    const navLinks = document.querySelectorAll("nav a");

    const options = {
      threshold: 0.6, // 60% da seção deve estar visível
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        const id = entry.target.getAttribute("id");
        const navLink = document.querySelector(`nav a[href="#${id}"]`);

        if (entry.isIntersecting) {
          navLinks.forEach((link) => link.classList.remove("active"));
          navLink?.classList.add("active");
          navLink?.querySelector("span")?.classList.add("scale-x-100");
        } else {
          navLink?.classList.remove("active");
          navLink?.querySelector("span")?.classList.remove("scale-x-100");
        }
      });
    }, options);

    sections.forEach((section) => {
      observer.observe(section);
    });
  });
</script>
